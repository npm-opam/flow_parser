requireLazy.js:8
  8:   var num2: number = A.stringValueA; // Error: string ~> number
                          ^^^^^^^^^^^^^^ string. This type is incompatible with
  8:   var num2: number = A.stringValueA; // Error: string ~> number
                 ^^^^^^ number

requireLazy.js:9
  9:   var str2: string = A.numberValueA; // Error: number ~> string
                          ^^^^^^^^^^^^^^ number. This type is incompatible with
  9:   var str2: string = A.numberValueA; // Error: number ~> string
                 ^^^^^^ string

requireLazy.js:13
 13:   var num4: number = B.stringValueB; // Error: string ~> number
                          ^^^^^^^^^^^^^^ string. This type is incompatible with
 13:   var num4: number = B.stringValueB; // Error: string ~> number
                 ^^^^^^ number

requireLazy.js:14
 14:   var str4: string = B.numberValueB; // Error: number ~> string
                          ^^^^^^^^^^^^^^ number. This type is incompatible with
 14:   var str4: string = B.numberValueB; // Error: number ~> string
                 ^^^^^^ string

requireLazy.js:17
 17: var notA: Object = A;
                        ^ identifier `A`. Could not resolve name

requireLazy.js:18
 18: var notB: Object = B;
                        ^ identifier `B`. Could not resolve name

requireLazy.js:20
 20: requireLazy(); // Error: No args
     ^^^^^^^^^^^^^ The first arg to requireLazy() must be a literal array of string literals!

requireLazy.js:21
 21: requireLazy([nope], function() {}); // Error: Non-stringliteral args
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ The first arg to requireLazy() must be a literal array of string literals!

requireLazy.js:22
 22: requireLazy(['A']); // Error: No calback expression
     ^^^^^^^^^^^^^^^^^^ The first arg to requireLazy() must be a literal array of string literals!


Found 9 errors
